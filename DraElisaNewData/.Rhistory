2.48, 1.78, 87.94, 0.93, 6.87, 0.00,
1.31, 32.12, 0.46, 1.31, 64.80, 0.00,
18.87, 17.56, 0.59, 3.84, 59.09, 0.05,
3.01, 18.24, 38.14, 0.44, 39.59, 0.59,
3.05, 52.19, 1.03, 1.71, 5.23, 36.80,
2.67, 18.48, 29.94, 0.98, 47.79, 0.14,
2.30, 25.07, 5.24, 0.88, 66.51, 0.00,
2.07, 39.12, 0.28, 1.84, 56.58, 0.11,
29.40, 23.98, 0.13, 1.90, 44.57, 0.02,
3.99, 23.28, 0.37, 14.90, 57.41, 0.05,
2.52, 1.71, 0.63, 2.19, 92.95, 0.00,
1.86, 10.82, 0.80, 24.70, 61.46, 0.37,
0.98, 30.72, 1.09, 23.46, 43.75, 0.00,
19.53, 14.23, 0.75, 22.96, 42.51, 0.02,
1.70, 35.04, 0.22, 1.28, 61.77, 0.00
), ncol = 6, byrow = TRUE)
# Agregar la tabla al documento
doc <- doc %>%
add_flextable(data, align = "center") %>%
autofit()
# Guardar el documento
print(doc, target = "porcentajes.docx")
library(tidyr)
# Agregar un título al documento
doc <- doc %>%
add_title("Porcentajes por Licenciatura y Plantel (Transpuesta)", level = 1)
# Crear una tabla de datos
data <- matrix(c(
6.25, 24.61, 0.13, 19.17, 49.81, 0.04,
33.44, 18.46, 1.15, 2.15, 44.75, 0.04,
1.56, 14.61, 14.49, 21.91, 46.84, 0.58,
0.16, 0.39, 2.00, 38.55, 58.89, 0.00,
2.48, 1.78, 87.94, 0.93, 6.87, 0.00,
1.31, 32.12, 0.46, 1.31, 64.80, 0.00,
18.87, 17.56, 0.59, 3.84, 59.09, 0.05,
3.01, 18.24, 38.14, 0.44, 39.59, 0.59,
3.05, 52.19, 1.03, 1.71, 5.23, 36.80,
2.67, 18.48, 29.94, 0.98, 47.79, 0.14,
2.30, 25.07, 5.24, 0.88, 66.51, 0.00,
2.07, 39.12, 0.28, 1.84, 56.58, 0.11,
29.40, 23.98, 0.13, 1.90, 44.57, 0.02,
3.99, 23.28, 0.37, 14.90, 57.41, 0.05,
2.52, 1.71, 0.63, 2.19, 92.95, 0.00,
1.86, 10.82, 0.80, 24.70, 61.46, 0.37,
0.98, 30.72, 1.09, 23.46, 43.75, 0.00,
19.53, 14.23, 0.75, 22.96, 42.51, 0.02,
1.70, 35.04, 0.22, 1.28, 61.77, 0.00
), ncol = 6, byrow = TRUE)
# Agregar la tabla al documento
doc <- doc %>%
add_flextable(data, align = "center") %>%
autofit()
# Guardar el documento
print(doc, target = "porcentajes.docx")
library(officer)
>>>>>>> Stashed changes
load("/home/todomundo/Documentos/Resultados/Repositorio/WkspceActualizado.RData")
load("/Users/todomundomx/Documents/CertProy/ArticuloCertGral/Repositorio/WkspceActualizado.RData")
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
MaxIntNuncaCertif  <- MPG[order(MPG$MaxIntNuncaCert,decreasing= TRUE), ];  View(MaxIntNuncaCertif); # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMaxIntNuncaCert <- MaxIntNuncaCertif%>% filter(MaxIntNuncaCertif$MaxIntNuncaCert>=4);
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,4,5,2,7)]; View(ResMaxIntNuncaCert);
summary(ResMaxIntCert)
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,2)]; View(ResMaxIntNuncaCert);
summary(ResMaxIntCert)
table_latex <- xtable(ResMaxIntNuncaCert)
print(table_latex, type = "latex")
MediaNuncaCert   <- MPG[order(MPG$MeanIntNuncaCert,decreasing= TRUE), ]; View(MediaNuncaCert);  # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMediaNuncaCert <- MediaNuncaCert%>% filter(MediaNuncaCert$MeanIntNuncaCert>=2);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,5,3,4,7)]; View(ResMediaNuncaCert);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,2)]; View(ResMediaNuncaCert);
summary(ResMediaNuncaCert)
table_latex <- xtable(ResMediaNuncaCert)
print(table_latex, type = "latex")
MediaIntSiCert   <- MPG[order(MPG$MeanIntSiCert,decreasing= TRUE), ];    View(MediaIntSiCert)   # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMediaSiCert <- MediaIntSiCert%>% filter(MediaIntSiCert$MeanIntSiCert>=2)
ResMediaSiCert <- ResMediaSiCert[, c(1,9,8,10,11)]; View(ResMediaSiCert);
ResMediaSiCert <-ResMediaSiCert[, c(1,2)]; View(ResMediaSiCert);
summary(ResMediaSiCert)
table_latex <- xtable(ResMediaSiCert)
print(table_latex, type = "latex")
26. **[Journal od educational and behavioral statistics](https://www.aera.net/Publications/Journals/Journal-of-Educational-Behavioral-Statistics)**
#----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# # 07 de noviembre de 2023
# Carlos E Martinez R.
#-----01 Importacion/instalacion de librerias-----
library(DESeq2)
#-----02 Adecuacion del directorio de trabajo e importacion de datos-----
setwd("~/Desktop/CursoRNA/Expresion")
counts <- read.table("all.samples.counts.txt", header = T)
head(counts)
sampleFiles <- colnames(counts)[7:10]
sampleFiles
#----03 Construccion del objeto DEseqDataSet----
# Asignar los metadatos de los conteos
condition <- c('Normal','Normal','Tumor','Tumor')
condition <- factor(condition,
levels = c("Normal","Tumor"))
condition <- relevel(condition, ref = "Normal")
# La convertimos en un dataframe
sampleTable <- data.frame(sampleName = sampleFiles,
fileName   = sampleFiles,
condition  = condition)
str(sampleTable)
# construccion del objeto utilizando DESeq2
ddsFeatureCounts <- DESeqDataSetFromMatrix(countData = counts[,7:10],
colData = sampleTable,
design =~ condition)
#----04 Expresion diferencial----
dds<-DESeq(ddsFeatureCounts)
#----05 Exportar resultados----
#Resumen de resultados
summary(dds)
#obtener resultados
res<-results(dds, contrast = c('condition', 'Normal', 'Tumor'))
#veamos la tabla generada
head(res)
#le ponemos los nombres a los genes
rownames(res) <- counts$gene_id
#ordenamos en funcion del pvalue
res<-res[order(res$padj),]
#vemos nuevamente la tabla
head(res)
#obtener resultados
res<-results(dds, contrast = c('condition', 'Normal', 'Tumor'))
#veamos la tabla generada
head(res)
#le ponemos los nombres a los genes
rownames(res) <- counts$Geneid
#ordenamos en funcion del pvalue
res<-res[order(res$padj),]
#vemos nuevamente la tabla
head(res)
#un resumen de la tabla de resultados
summary(res)
write.csv(res, file="Table_EDs.csv", quote= F)
#----grafica de MA ----
plotMA(dds,alpha=0.05)
plotMA(dds,alpha=0.05,ylim=c(-6,6))
plotMA(dds,alpha=0.01,ylim=c(-6,6))
plotMA(dds,alpha=0.1,ylim=c(-6,6))
plotMA(dds,alpha=0.01,ylim=c(-6,6))
plotMA(dds,alpha=0.05,ylim=c(-6,6))
rld <- rlogTransformation (dds)
pca <- plotPcA(rld, intgroup = c("condition"))
pca
rld <- rlogTransformation (dds)
pca <- plotPcA(rld, intgroup = c("condition"))
library(DESeq2)
pca <- plotPcA(rld, intgroup = c("condition"))
pca <- plotPCA(rld, intgroup = c("condition"))
pca
summary(rld)
View(rld)
rld$fileName
rld$condition
rld$sizeFactor
rld$sampleName
cuentas <- counts(dds,normalized=T)
boxplot(cuentas)
boxplot(log2(cuentas+1))
boxplot(log2(cuentas)+1)
boxplot(cuentas)
boxplot(log2(cuentas+1))
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
NewGenes <- read_csv("ExpresiónMybStresSuer.csv")
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
NewGenes <- read_csv("ExpresiónMybStresSuer.csv")
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
NewGenes <- read_csv("ExpresiónMybStresSuero.csv")
View(NewGenes)
colnames(NewGenes)
colnames(NewGenes) <- c("GeneID","Normal","Serum_starved","Serum_Replenished")
View(NewGenes)
View(NewGenes)
rownames(NewGenes) <- NewGenes$GeneID
NewGenes_Clean <- NewGenes[,2:8]; View(NewGenes_Clean)
View(NewGenes)
NewGenes_Clean <- NewGenes[,2:4]; View(NewGenes_Clean)
NewGenes_Clean <- as.data.frame(NewGenes_Clean)
rownames(NewGenes_Clean) <- NewGenes$GeneID
View(NewGenes_Clean)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Normal),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Trophozoites>0) %>% select(Normal)
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Normal>0) %>% select(Normal)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Normal),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Normal>0) %>% select(Normal)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ];
View(NewGenes_log2_filtrado)
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
pheatmap(NewGenes_log2_filtrado, scale = "row",
color = my_colors4,
border_color = NA,
fontsize_row = 5,
display_numbers = FALSE,
cluster_cols = FALSE,
cluster_rows = TRUE,
legend_breaks = c(-1,0,1),
legend_MapasCalorels = c("Bajo","Medio","Alto"))#,
pdf("MapasCalor/HeatMapNormalizadosRenglon.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "row")
dev.off()
pdf("MapasCalor/HeatMapNormalizadosColumna.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "column")
dev.off()
pdf("MapasCalor/HeatMapPaletaPersonal.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "row", color = my_colors2)
dev.off()
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
#my_colors
pdf("MapasCalor/HeatMapLog2Transformed.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "row", color = my_colors)
dev.off()
pdf("MapasCalor/HeatMapLog2TransformedLetra4.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "row",color = my_colors, border_color = NA, fontsize_row = 4)
dev.off()
pdf("MapasCalor/MapadeCalorFinal.pdf")
pheatmap(NewGenes_log2_filtrado, scale = "row",color = my_colors, border_color = NA, fontsize_row = 6)
dev.off()
# <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>>
# llegamos por fin llegamos
# <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>> <<>><<>>
pdf("MapasCalor/MapadeCalorFinalSDC.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE)
dev.off()
pdf("MapasCalor/HeathmapCFSinNorm.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE)
dev.off()
#scale = "row",
# A partir de aqui
pdf("MapasCalor/HeathmapCFNormRenglon.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,scale = "row")
dev.off()
#fontsize_row = 6
pdf("MapasCalor/HeathmapCFNormRenglonLetra.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = 2.75)
dev.off()
#border_color = NA,
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#color = my_colors,
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#color = my_colors,
pdf("MapasCalor/HeathmapCFNormRenglonLetra8conBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = 2.75, main = "Mi Mapa de Calor")
dev.off()
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = 2.75, border_color = NA)
dev.off()
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonLetra8SinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
#setwd("~/Desktop/MiGithub/MapaCalorReloaded") # computadora de la casa
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes <- read_csv("ExpresiónMybStresSuero.csv")
colnames(NewGenes) <- c("GeneID","Normal","Serum_starved","Serum_Replenished")
View(NewGenes)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
rownames(NewGenes) <- NewGenes$GeneID
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes_Clean <- NewGenes[,2:4]; View(NewGenes_Clean)
NewGenes_Clean <- as.data.frame(NewGenes_Clean)
rownames(NewGenes_Clean) <- NewGenes$GeneID; View(NewGenes_Clean)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
# Generacion de las bdd modificadas
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Normal),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Normal>0) %>% select(Normal)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ];View(NewGenes_log2_filtrado)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
# Personalización de la paleta de colores
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
boxplot(NewGenes_Clean, las = 3)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
#setwd("~/Desktop/MiGithub/MapaCalorReloaded") # computadora de la casa
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes <- read_csv("ExpresiónMybStresSuero.csv")
colnames(NewGenes) <- c("GeneID","Normal","Serum_starved","Serum_Replenished")
View(NewGenes)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
rownames(NewGenes) <- NewGenes$GeneID
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes_Clean <- NewGenes[,2:4]; View(NewGenes_Clean)
NewGenes_Clean <- as.data.frame(NewGenes_Clean)
rownames(NewGenes_Clean) <- NewGenes$GeneID; View(NewGenes_Clean)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
# Generacion de las bdd modificadas
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Normal),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Normal>0) %>% select(Normal)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ];View(NewGenes_log2_filtrado)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
