07  1482 0 1336 2391 13483 614 2076 0 921 2404 16304 321
08  1914 1622 1903 2706 18035 813 2300 1474 1866 2598 20715 353
09  4447 6951 3302 4559 30956 1727 4528 6086 2925 4222 28648 681
10  4204 7147 2585 3534 22883 1505 3851 4267 1708 2716 16299 494
11  4850 8846 2716 4179 25113 1112 3395 3976 2098 2416 13310 543
12  2501 5264 1454 2232 13004 510 1670 2279 786 1185 6532 323
13  4493 10846 3260 4031 24282 1071 2459 4449 1658 2255 10347 424
14  5345 12594 3377 4153 24967 1153 2725 4519 1890 2332 11015 379
15  6242 14426 3725 4557 25280 1055 3787 4667 1853 2428 10370 331
16  6111 16010 3593 4872 25648 1417 2999 5349 1713 2494 10170 407
17  6225 16896 3700 5320 24879 1346 2710 5607 1623 2487 10312 324
18  6686 17182 4496 5854 24555 1432 2596 4997 1932 2712 10105 427
19  6950 18591 5026 6946 25053 1384 2424 4863 2007 2999 9745 342
20  3487 9168 2559 4015 11794 322 1470 3183 1333 1774 4684 606
21  9585 26384 7514 11323 38172 248 2873 7111 2623 3689 12502 570
22  3104 8335 2274 4060 11610 304 951 2214 863 1284 3440 188
")
data
data_FnF <- data.frame(
Año = 1:22,
CH_Favorables = c(1709, 466, 1051, 1493, 896, 1075, 1482, 1914, 4447, 4204, 4850, 2501, 4493, 5345, 6242, 6111, 6225, 6686, 6950, 3487, 9585, 3104),
CH_No_Favorables = c(980, 1510, 1062, 1222, 939, 1195, 2076, 2300, 4528, 3851, 3395, 1670, 2459, 2725, 3787, 2999, 2710, 2596, 2424, 1470, 2873, 951),
GAM_Favorables = c(3950, 0, 0, 0, 0, 0, 0, 1622, 6951, 7147, 8846, 5264, 10846, 12594, 14426, 16010, 16896, 17182, 18591, 9168, 26384, 8335),
GAM_No_Favorables = c(1388, 0, 0, 0, 0, 0, 0, 1474, 6086, 4267, 3976, 2279, 4449, 4519, 4667, 5349, 5607, 4997, 4863, 3183, 7111, 2214),
DV_Favorables = c(1046, 114, 426, 1234, 814, 646, 1336, 1903, 3302, 2585, 2716, 1454, 3260, 3377, 3725, 3593, 3700, 4496, 5026, 2559, 7514, 2274),
DV_No_Favorables = c(557, 120, 159, 289, 465, 494, 921, 1866, 2925, 1708, 2098, 786, 1658, 1890, 1853, 1713, 1623, 1932, 2007, 1333, 2623, 863),
IZT_Favorables = c(1636, 258, 1347, 2164, 2340, 2287, 2391, 2706, 4559, 3534, 4179, 2232, 4031, 4153, 4557, 4872, 5320, 5854, 6946, 4015, 11323, 4060),
IZT_No_Favorables = c(826, 448, 996, 2548, 2503, 2325, 2404, 2598, 4222, 2716, 2416, 1185, 2255, 2332, 2428, 2494, 2487, 2712, 2999, 1774, 3689, 1284),
SLT_Favorables = c(9562, 2, 48, 656, 2299, 8854, 13483, 18035, 30956, 22883, 25113, 13004, 24282, 24967, 25280, 25648, 24879, 24555, 25053, 11794, 38172, 11610),
SLT_No_Favorables = c(3752, 9, 20, 538, 2309, 10799, 16304, 20715, 28648, 16299, 13310, 6532, 10347, 11015, 10370, 10170, 10312, 10105, 9745, 4684, 12502, 3440),
PESCER_Favorables = c(498, 0, 0, 0, 0, 343, 614, 813, 1727, 1505, 1112, 510, 1071, 1153, 1055, 1417, 1346, 1432, 1384, 322, 248, 304),
PESCER_No_Favorables = c(269, 0, 0, 0, 0, 129, 321, 353, 681, 494, 543, 323, 424, 379, 331, 407, 324, 427, 342, 606, 570, 188)
)
data_FnF
data <- data.frame(
Año = 1:22,
CH_Favorables = c(1709, 466, 1051, 1493, 896, 1075, 1482, 1914, 4447, 4204, 4850, 2501, 4493, 5345, 6242, 6111, 6225, 6686, 6950, 3487, 9585, 3104),
CH_No_Favorables = c(980, 1510, 1062, 1222, 939, 1195, 2076, 2300, 4528, 3851, 3395, 1670, 2459, 2725, 3787, 2999, 2710, 2596, 2424, 1470, 2873, 951),
GAM_Favorables = c(3950, 0, 0, 0, 0, 0, 0, 1622, 6951, 7147, 8846, 5264, 10846, 12594, 14426, 16010, 16896, 17182, 18591, 9168, 26384, 8335),
GAM_No_Favorables = c(1388, 0, 0, 0, 0, 0, 0, 1474, 6086, 4267, 3976, 2279, 4449, 4519, 4667, 5349, 5607, 4997, 4863, 3183, 7111, 2214),
DV_Favorables = c(1046, 114, 426, 1234, 814, 646, 1336, 1903, 3302, 2585, 2716, 1454, 3260, 3377, 3725, 3593, 3700, 4496, 5026, 2559, 7514, 2274),
DV_No_Favorables = c(557, 120, 159, 289, 465, 494, 921, 1866, 2925, 1708, 2098, 786, 1658, 1890, 1853, 1713, 1623, 1932, 2007, 1333, 2623, 863),
IZT_Favorables = c(1636, 258, 1347, 2164, 2340, 2287, 2391, 2706, 4559, 3534, 4179, 2232, 4031, 4153, 4557, 4872, 5320, 5854, 6946, 4015, 11323, 4060),
IZT_No_Favorables = c(826, 448, 996, 2548, 2503, 2325, 2404, 2598, 4222, 2716, 2416, 1185, 2255, 2332, 2428, 2494, 2487, 2712, 2999, 1774, 3689, 1284),
SLT_Favorables = c(9562, 2, 48, 656, 2299, 8854, 13483, 18035, 30956, 22883, 25113, 13004, 24282, 24967, 25280, 25648, 24879, 24555, 25053, 11794, 38172, 11610),
SLT_No_Favorables = c(3752, 9, 20, 538, 2309, 10799, 16304, 20715, 28648, 16299, 13310, 6532, 10347, 11015, 10370, 10170, 10312, 10105, 9745, 4684, 12502, 3440),
PESCER_Favorables = c(498, 0, 0, 0, 0, 343, 614, 813, 1727, 1505, 1112, 510, 1071, 1153, 1055, 1417, 1346, 1432, 1384, 322, 248, 304),
PESCER_No_Favorables = c(269, 0, 0, 0, 0, 129, 321, 353, 681, 494, 543, 323, 424, 379, 331, 407, 324, 427, 342, 606, 570, 188)
)
data
data <- data.frame(
Año = 1:22,
CH_C = c(1709, 466, 1051, 1493, 896, 1075, 1482, 1914, 4447, 4204, 4850, 2501, 4493, 5345, 6242, 6111, 6225, 6686, 6950, 3487, 9585, 3104),
CH_NC = c(980, 1510, 1062, 1222, 939, 1195, 2076, 2300, 4528, 3851, 3395, 1670, 2459, 2725, 3787, 2999, 2710, 2596, 2424, 1470, 2873, 951),
GAM_C = c(3950, 0, 0, 0, 0, 0, 0, 1622, 6951, 7147, 8846, 5264, 10846, 12594, 14426, 16010, 16896, 17182, 18591, 9168, 26384, 8335),
GAM_NC = c(1388, 0, 0, 0, 0, 0, 0, 1474, 6086, 4267, 3976, 2279, 4449, 4519, 4667, 5349, 5607, 4997, 4863, 3183, 7111, 2214),
DV_C = c(1046, 114, 426, 1234, 814, 646, 1336, 1903, 3302, 2585, 2716, 1454, 3260, 3377, 3725, 3593, 3700, 4496, 5026, 2559, 7514, 2274),
DV_NC = c(557, 120, 159, 289, 465, 494, 921, 1866, 2925, 1708, 2098, 786, 1658, 1890, 1853, 1713, 1623, 1932, 2007, 1333, 2623, 863),
IZT_C = c(1636, 258, 1347, 2164, 2340, 2287, 2391, 2706, 4559, 3534, 4179, 2232, 4031, 4153, 4557, 4872, 5320, 5854, 6946, 4015, 11323, 4060),
IZT_NC = c(826, 448, 996, 2548, 2503, 2325, 2404, 2598, 4222, 2716, 2416, 1185, 2255, 2332, 2428, 2494, 2487, 2712, 2999, 1774, 3689, 1284),
SLT_C = c(9562, 2, 48, 656, 2299, 8854, 13483, 18035, 30956, 22883, 25113, 13004, 24282, 24967, 25280, 25648, 24879, 24555, 25053, 11794, 38172, 11610),
SLT_NC = c(3752, 9, 20, 538, 2309, 10799, 16304, 20715, 28648, 16299, 13310, 6532, 10347, 11015, 10370, 10170, 10312, 10105, 9745, 4684, 12502, 3440),
PESCER_C = c(498, 0, 0, 0, 0, 343, 614, 813, 1727, 1505, 1112, 510, 1071, 1153, 1055, 1417, 1346, 1432, 1384, 322, 248, 304),
PESCER_NC = c(269, 0, 0, 0, 0, 129, 321, 353, 681, 494, 543, 323, 424, 379, 331, 407, 324, 427, 342, 606, 570, 188)
)
data
TTL_CH <- data[,2]+data[,3]
TTL_CH
ttl_GAM <- data[,4]+data[,5]
ttl_GAM
ttl_CH <- data[,2]+data[,3]
ttl_GAM <- data[,4]+data[,5]
ttl_DV <- data[,6]+data[,7]
ttl_IZT <- data[,8]+data[,9]
ttl_SLT <- data[,10]+data[,11]
ttl_PESCER <- data[,12]+data[,13]
ttl_PESCER
ttl_SLT
ttl_IZT
ttl_DV
ttl_GAM
ttl_CH
data <- cbind(data,ttl_CH,ttl_GAM,ttl_DV,ttl_IZT,ttl_SLT,ttl_PESCER)
data
data[,14]
tasa_CH <- data[,2]/data[,3]
tasa_CH
porc_CH
porc_CH <- data[,2]/data[,14]
porc_CH
porc_CH <- data[,2]/data[,14]
tasa_CH <- data[,2]/data[,3]
porc_GAM <- data[,4]/data[,15]
tasa_GAM <- data[,4]/data[,5]
porc_DV <- data[,6]/data[,16]
tasa_DV <- data[,6]/data[,7]
porc_IZT <- data[,8]/data[,17]
tasa_IZT <- data[,8]/data[,9]
porc_SLT <- data[,10]/data[,18]
tasa_SLT <- data[,10]/data[,11]
porc_PESCER <- data[,12]/data[,19]
tasa_PESCER <- data[,12]/data[,13]
data <- cbind(data, porc_CH,tasa_CH,, porc_GAM,tasa_GAM,
porc_DV,tasa_DV, porc_IZT,tasa_IZT,
porc_SLT,tasa_SLT, porc_PESCER,tasa_PESCER)
porc_CH <- data[,2]/data[,14]
tasa_CH <- data[,2]/data[,3]
porc_GAM <- data[,4]/data[,15]
tasa_GAM <- data[,4]/data[,5]
porc_DV <- data[,6]/data[,16]
tasa_DV <- data[,6]/data[,7]
porc_IZT <- data[,8]/data[,17]
tasa_IZT <- data[,8]/data[,9]
porc_SLT <- data[,10]/data[,18]
tasa_SLT <- data[,10]/data[,11]
porc_PESCER <- data[,12]/data[,19]
tasa_PESCER <- data[,12]/data[,13]
tasa_PESCER
porc_PESCER
tasa_SLT
porc_SLT
porc_IZT
tasa_IZT
cbind(data, porc_CH,tasa_CH,, porc_GAM,tasa_GAM,
porc_DV,tasa_DV, porc_IZT,tasa_IZT,
porc_SLT,tasa_SLT, porc_PESCER,tasa_PESCER)
data <- cbind(data, porc_CH,tasa_CH, porc_GAM,tasa_GAM,
porc_DV,tasa_DV, porc_IZT,tasa_IZT,
porc_SLT,tasa_SLT, porc_PESCER,tasa_PESCER)
View(data)
data1 <- data[,14:19]
data1
data1 <- data[,20:31]
data1
data2 <- cbind(data[,1], tasa_CH, tasa_GAM,tasa_DV, tasa_IZT,tasa_SLT,tasa_PESCER)
data2
data2 <- cbind(data[,1], tasa_CH, tasa_GAM,tasa_DV, tasa_IZT,tasa_SLT,tasa_PESCER)
data2
colnames(data2) <- c("Año","Tasa CH","Tasa GAM","Tasa DV","Tasa IZT","Tasa SLT","Tasa PESCER")
data2
=======
View(PorcentajesLic)
print(PorcentajesLic)
install.packages('officer')
library(officer)
# Crear un nuevo documento
doc <- read_docx()
# Agregar un título al documento
doc <- doc %>%
add_title("Porcentajes por Licenciatura y Plantel (Transpuesta)", level = 1)
# Crear una tabla de datos
data <- matrix(c(
6.25, 24.61, 0.13, 19.17, 49.81, 0.04,
33.44, 18.46, 1.15, 2.15, 44.75, 0.04,
1.56, 14.61, 14.49, 21.91, 46.84, 0.58,
0.16, 0.39, 2.00, 38.55, 58.89, 0.00,
2.48, 1.78, 87.94, 0.93, 6.87, 0.00,
1.31, 32.12, 0.46, 1.31, 64.80, 0.00,
18.87, 17.56, 0.59, 3.84, 59.09, 0.05,
3.01, 18.24, 38.14, 0.44, 39.59, 0.59,
3.05, 52.19, 1.03, 1.71, 5.23, 36.80,
2.67, 18.48, 29.94, 0.98, 47.79, 0.14,
2.30, 25.07, 5.24, 0.88, 66.51, 0.00,
2.07, 39.12, 0.28, 1.84, 56.58, 0.11,
29.40, 23.98, 0.13, 1.90, 44.57, 0.02,
3.99, 23.28, 0.37, 14.90, 57.41, 0.05,
2.52, 1.71, 0.63, 2.19, 92.95, 0.00,
1.86, 10.82, 0.80, 24.70, 61.46, 0.37,
0.98, 30.72, 1.09, 23.46, 43.75, 0.00,
19.53, 14.23, 0.75, 22.96, 42.51, 0.02,
1.70, 35.04, 0.22, 1.28, 61.77, 0.00
), ncol = 6, byrow = TRUE)
# Agregar la tabla al documento
doc <- doc %>%
add_flextable(data, align = "center") %>%
autofit()
# Guardar el documento
print(doc, target = "porcentajes.docx")
library(tidyr)
# Agregar un título al documento
doc <- doc %>%
add_title("Porcentajes por Licenciatura y Plantel (Transpuesta)", level = 1)
# Crear una tabla de datos
data <- matrix(c(
6.25, 24.61, 0.13, 19.17, 49.81, 0.04,
33.44, 18.46, 1.15, 2.15, 44.75, 0.04,
1.56, 14.61, 14.49, 21.91, 46.84, 0.58,
0.16, 0.39, 2.00, 38.55, 58.89, 0.00,
2.48, 1.78, 87.94, 0.93, 6.87, 0.00,
1.31, 32.12, 0.46, 1.31, 64.80, 0.00,
18.87, 17.56, 0.59, 3.84, 59.09, 0.05,
3.01, 18.24, 38.14, 0.44, 39.59, 0.59,
3.05, 52.19, 1.03, 1.71, 5.23, 36.80,
2.67, 18.48, 29.94, 0.98, 47.79, 0.14,
2.30, 25.07, 5.24, 0.88, 66.51, 0.00,
2.07, 39.12, 0.28, 1.84, 56.58, 0.11,
29.40, 23.98, 0.13, 1.90, 44.57, 0.02,
3.99, 23.28, 0.37, 14.90, 57.41, 0.05,
2.52, 1.71, 0.63, 2.19, 92.95, 0.00,
1.86, 10.82, 0.80, 24.70, 61.46, 0.37,
0.98, 30.72, 1.09, 23.46, 43.75, 0.00,
19.53, 14.23, 0.75, 22.96, 42.51, 0.02,
1.70, 35.04, 0.22, 1.28, 61.77, 0.00
), ncol = 6, byrow = TRUE)
# Agregar la tabla al documento
doc <- doc %>%
add_flextable(data, align = "center") %>%
autofit()
# Guardar el documento
print(doc, target = "porcentajes.docx")
library(officer)
>>>>>>> Stashed changes
load("/home/todomundo/Documentos/Resultados/Repositorio/WkspceActualizado.RData")
load("/Users/todomundomx/Documents/CertProy/ArticuloCertGral/Repositorio/WkspceActualizado.RData")
library(dplyr)
library(readr)
library(foreign)
library(xtable)
library(stargazer)
MaxIntNuncaCertif  <- MPG[order(MPG$MaxIntNuncaCert,decreasing= TRUE), ];  View(MaxIntNuncaCertif); # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMaxIntNuncaCert <- MaxIntNuncaCertif%>% filter(MaxIntNuncaCertif$MaxIntNuncaCert>=4);
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,4,5,2,7)]; View(ResMaxIntNuncaCert);
summary(ResMaxIntCert)
ResMaxIntNuncaCert <- ResMaxIntNuncaCert[,c(1,2)]; View(ResMaxIntNuncaCert);
summary(ResMaxIntCert)
table_latex <- xtable(ResMaxIntNuncaCert)
print(table_latex, type = "latex")
MediaNuncaCert   <- MPG[order(MPG$MeanIntNuncaCert,decreasing= TRUE), ]; View(MediaNuncaCert);  # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMediaNuncaCert <- MediaNuncaCert%>% filter(MediaNuncaCert$MeanIntNuncaCert>=2);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,5,3,4,7)]; View(ResMediaNuncaCert);
ResMediaNuncaCert <-ResMediaNuncaCert[, c(1,2)]; View(ResMediaNuncaCert);
summary(ResMediaNuncaCert)
table_latex <- xtable(ResMediaNuncaCert)
print(table_latex, type = "latex")
MediaIntSiCert   <- MPG[order(MPG$MeanIntSiCert,decreasing= TRUE), ];    View(MediaIntSiCert)   # si
#<<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>><<==>><<==>><<==>><<==<<==>><<==>>
ResMediaSiCert <- MediaIntSiCert%>% filter(MediaIntSiCert$MeanIntSiCert>=2)
ResMediaSiCert <- ResMediaSiCert[, c(1,9,8,10,11)]; View(ResMediaSiCert);
ResMediaSiCert <-ResMediaSiCert[, c(1,2)]; View(ResMediaSiCert);
summary(ResMediaSiCert)
table_latex <- xtable(ResMediaSiCert)
print(table_latex, type = "latex")
26. **[Journal od educational and behavioral statistics](https://www.aera.net/Publications/Journals/Journal-of-Educational-Behavioral-Statistics)**
#----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# # 07 de noviembre de 2023
# Carlos E Martinez R.
#-----01 Importacion/instalacion de librerias-----
library(DESeq2)
#-----02 Adecuacion del directorio de trabajo e importacion de datos-----
setwd("~/Desktop/CursoRNA/Expresion")
counts <- read.table("all.samples.counts.txt", header = T)
head(counts)
sampleFiles <- colnames(counts)[7:10]
sampleFiles
#----03 Construccion del objeto DEseqDataSet----
# Asignar los metadatos de los conteos
condition <- c('Normal','Normal','Tumor','Tumor')
condition <- factor(condition,
levels = c("Normal","Tumor"))
condition <- relevel(condition, ref = "Normal")
# La convertimos en un dataframe
sampleTable <- data.frame(sampleName = sampleFiles,
fileName   = sampleFiles,
condition  = condition)
str(sampleTable)
# construccion del objeto utilizando DESeq2
ddsFeatureCounts <- DESeqDataSetFromMatrix(countData = counts[,7:10],
colData = sampleTable,
design =~ condition)
#----04 Expresion diferencial----
dds<-DESeq(ddsFeatureCounts)
#----05 Exportar resultados----
#Resumen de resultados
summary(dds)
#obtener resultados
res<-results(dds, contrast = c('condition', 'Normal', 'Tumor'))
#veamos la tabla generada
head(res)
#le ponemos los nombres a los genes
rownames(res) <- counts$gene_id
#ordenamos en funcion del pvalue
res<-res[order(res$padj),]
#vemos nuevamente la tabla
head(res)
#obtener resultados
res<-results(dds, contrast = c('condition', 'Normal', 'Tumor'))
#veamos la tabla generada
head(res)
#le ponemos los nombres a los genes
rownames(res) <- counts$Geneid
#ordenamos en funcion del pvalue
res<-res[order(res$padj),]
#vemos nuevamente la tabla
head(res)
#un resumen de la tabla de resultados
summary(res)
write.csv(res, file="Table_EDs.csv", quote= F)
#----grafica de MA ----
plotMA(dds,alpha=0.05)
plotMA(dds,alpha=0.05,ylim=c(-6,6))
plotMA(dds,alpha=0.01,ylim=c(-6,6))
plotMA(dds,alpha=0.1,ylim=c(-6,6))
plotMA(dds,alpha=0.01,ylim=c(-6,6))
plotMA(dds,alpha=0.05,ylim=c(-6,6))
rld <- rlogTransformation (dds)
pca <- plotPcA(rld, intgroup = c("condition"))
pca
rld <- rlogTransformation (dds)
pca <- plotPcA(rld, intgroup = c("condition"))
library(DESeq2)
pca <- plotPcA(rld, intgroup = c("condition"))
pca <- plotPCA(rld, intgroup = c("condition"))
pca
summary(rld)
View(rld)
rld$fileName
rld$condition
rld$sizeFactor
rld$sampleName
cuentas <- counts(dds,normalized=T)
boxplot(cuentas)
boxplot(log2(cuentas+1))
boxplot(log2(cuentas)+1)
boxplot(cuentas)
boxplot(log2(cuentas+1))
NewGenes <- read.csv("ExpresionEiMybs.csv")
setwd("~/Desktop/MiGithub/MapaCalorReloaded/DraElisaNewData")
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
NewGenes <- read.csv("ExpresionEiMybs.csv")
colnames(NewGenes)
colnames(NewGenes) <- c("GeneID","InputOrder","Trophozoites","Encyst_8h",
"Encyst_24h","Encyst_48h","Encyst_72h","Excyst_8h")
View(NewGenes)
colnames(NewGenes) <- c("GeneID","InputOrder","Trophozoites","Encyst_8h",
"Encyst_24h","Encyst_48h","Encyst_72h","Excyst_2h","Excyst_8h")
View(NewGenes)
rownames(NewGenes) <- NewGenes$GeneID
NewGenes_Clean <- NewGenes[,2:9]; View(NewGenes_Clean)
NewGenes_Clean <- as.data.frame(NewGenes_Clean)
rownames(NewGenes_Clean) <- NewGenes$GeneID; View(NewGenes_Clean)
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Trophozoites),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Normal>0) %>% select(Normal)
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Trophozoites),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ];View(NewGenes_log2_filtrado)
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
boxplot(NewGenes_log2, las = 3)
boxplot(NewGenes_log2_filtrado, las = 3)
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
View(NewGenes)
NewGenes_Clean <- NewGenes[,2:9]; View(NewGenes_Clean)
View(NewGenes)
NewGenes_Clean <- NewGenes[,3:9]; View(NewGenes_Clean)
NewGenes_Clean <- as.data.frame(NewGenes_Clean)
rownames(NewGenes_Clean) <- NewGenes$GeneID; View(NewGenes_Clean)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
# Generacion de las bdd modificadas
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Trophozoites),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ];View(NewGenes_log2_filtrado)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
boxplot(NewGenes_Clean, las = 3)
boxplot(NewGenes_log2, las = 3)
pdf("MapasCalor/BoxPlot")
boxplot(NewGenes_log2_filtrado, las = 3)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
# Personalización de la paleta de colores
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
LetraSize <- 6
pdf("MapasCalor/HeathmapCFNormRenglonSinBordes.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors2.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors2,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors3.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors3,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#
pdf("MapasCalor/HeathmapCFNormRenglonSinBordesMycolors4.pdf") # sin dendogramas columnas
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors4,
scale = "row",fontsize_row = LetraSize, border_color = NA)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
