alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
p1
revigo.names <- c("term_ID","description","frequency","plot_X","plot_Y","log_size","value","uniqueness","dispensability");
revigo.data <- rbind(c("GO:0000902","cell morphogenesis",0.2547222452837418,-6.4625022521547875,-1.020481743091991,4.884126704106494,-1.3850101245890665,1,-0),
c("GO:0005975","carbohydrate metabolic process",5.521546466478484,0.6252574475325016,-8.401293403063226,6.220115151808519,-4.08878238840169,0.918569697840237,0.06605965),
c("GO:0005976","polysaccharide metabolic process",1.1167319130275588,1.9399140785366105,2.573391536856036,5.526004379634945,-2.306541114801787,0.800110318494167,0.50062828),
c("GO:0005977","glycogen metabolic process",0.15998929235904444,2.07839254953769,4.37050503744209,4.682154105271285,-2.306541114801787,0.7579813642485328,0),
c("GO:0006014","D-ribose metabolic process",0.0324735023139574,3.3531826219140584,-1.1697710419256757,3.989627770745151,-1.3850101245890665,0.7807741575766552,0.64951062),
c("GO:0006082","organic acid metabolic process",8.895121929802153,4.814786780033746,-4.14438321499197,6.427206226819538,-3.328244029122345,0.7499568367054361,0.65731846),
c("GO:0006090","pyruvate metabolic process",0.8124529012810852,5.6632329396451855,-4.174443344152099,5.38785413076023,-1.661841326766608,0.7677181208834107,0.47439649),
c("GO:0006091","generation of precursor metabolites and energy",2.62835465282124,2.406080840714739,-8.281356391265337,5.897738674144431,-2.5935398453017737,0.9179566570579504,0.07142694),
c("GO:0006112","energy reserve metabolic process",0.16146279041549053,1.6381006653973433,6.644223664298112,4.686135559106637,-2.306541114801787,0.897669932420661,0.65905198),
c("GO:0006418","tRNA aminoacylation for protein translation",0.974318159563009,5.848674061993203,-1.4671595297532343,5.466756438594257,-2.0139163947229966,0.6088770072299181,0.20285709),
c("GO:0006457","protein folding",1.0590625918025878,-5.755472363647276,2.2940842090182505,5.502977151016975,-2.1556141416414265,0.9883318470890157,0.0124796),
c("GO:0006499","N-terminal protein myristoylation",0.011402147488706951,6.470306488758469,4.154299216579224,3.535167485114944,-1.3850101245890665,0.8289044817281538,0.23929075),
c("GO:0006508","proteolysis",5.350747086797883,7.256651803461404,1.6003462155293744,6.206468852551757,-2.5780712626124123,0.7881846156974271,0.36107106),
c("GO:0006810","transport",18.43241959157694,-3.5016127223249454,-4.901207417526029,6.743636585284185,-2.260426129459183,0.787989821355244,0.57967313),
c("GO:0008150","biological_process",100,-6.251128237738861,0.6094158002934453,7.47805417331953,-1.8982656367266175,1,-0),
c("GO:0009056","catabolic process",6.059177012419161,-2.851720758549677,2.4564119741408876,6.260468037413432,-3.6074578418667267,0.9501744636141854,0.04545057),
c("GO:0009066","aspartate family amino acid metabolic process",0.8335242561063357,6.2109232125710285,-2.408846586926003,5.398974134528076,-1.6433404733261572,0.7204556324697484,0.58351407),
c("GO:0009132","nucleoside diphosphate metabolic process",0.09319293125396481,5.283123571547984,-4.968130074941371,4.4474526312269935,-1.5848044322469477,0.8014152337494348,0.27579428),
c("GO:0009179","purine ribonucleoside diphosphate metabolic process",0.04863208822414945,4.799774771720758,-5.074299029703406,4.165006779568368,-1.7455822263732377,0.778310819857512,0.43566137),
c("GO:0009408","response to heat",0.1676661174477071,-3.1953835054817676,5.2158589159896716,4.702508082108066,-2.306541114801787,0.9738011045060151,-0),
c("GO:0009628","response to abiotic stimulus",0.5491291526700982,-2.6927148319492926,5.391932287316165,5.217731290014814,-1.3959106504715273,0.9864564161172993,0.28243337),
c("GO:0015980","energy derivation by oxidation of organic compounds",1.3592204656440126,1.9266502373416075,6.580049642794407,5.611345126683129,-1.6433404733261572,0.884150817911988,0.66061361),
c("GO:0016051","carbohydrate biosynthetic process",0.9607174066221332,2.473267084521993,2.470282417318745,5.46065132195499,-1.3959106504715273,0.7924181593826407,0.59881341),
c("GO:0016052","carbohydrate catabolic process",1.3222932073535736,3.128948023111835,3.0651464466306275,5.599383018287246,-1.7447647583152208,0.6946602820367422,0.67630193),
c("GO:0017038","protein import",0.050498075604885916,-2.6794727740004998,-5.9999980411497065,4.1813575920284505,-1.3859094805696361,0.7891200831109375,0.5507225),
c("GO:0019321","pentose metabolic process",0.18164605499001615,3.6386099957234963,-1.4821054908162048,4.737288081554018,-1.3850101245890665,0.7518610816429552,0.50651006),
c("GO:0019752","carboxylic acid metabolic process",8.61761202044457,5.162911717750121,-3.9996006328410454,6.413441264016772,-3.4338451925850126,0.7101704086307687,0.62971678),
c("GO:0022613","ribonucleoprotein complex biogenesis",1.8755867382780071,-4.906229302277843,3.8520658236759653,5.751192082363944,-1.6074583890902692,0.9709828319180763,0.01346186),
c("GO:0030163","protein catabolic process",1.1278347042519765,6.348592642358428,2.4947997057986853,5.5303008936809706,-3.082001884716955,0.6889667503536202,0.66312635),
c("GO:0033036","macromolecule localization",3.705455122637613,-3.932813246171816,-4.968986638239165,6.04689610654029,-2.24415601619502,0.8317086489970293,0.41260575),
c("GO:0034504","protein localization to nucleus",0.12382372945218602,-2.663890566684369,-5.642185262518053,4.5708697052408205,-1.5135936903045801,0.764019488073323,0.59738009),
c("GO:0043038","amino acid activation",0.9991846865833046,5.974698554065571,-2.368022016458555,5.47770137405037,-2.0139163947229966,0.7156942791754743,0.59496536),
c("GO:0044281","small molecule metabolic process",15.15473791824727,-1.0626616010118646,6.6673401110895085,6.658602684396198,-1.8154342512894506,0.943103134387422,0.06282687),
c("GO:0046034","ATP metabolic process",0.4379083219444906,5.901758610336621,-3.0698280543639984,5.11944065613114,-1.5135936903045801,0.7504167585003647,0.51281918),
c("GO:0046907","intracellular transport",2.0388822542670906,-3.100905883196661,-5.3954336251977075,5.787447013306281,-3.2232883973298754,0.7032264579098704,0.37826542),
c("GO:0051179","localization",18.792076186036212,-3.884084661382564,0.5201632820858231,6.75202900021518,-2.217508631387501,1,-0),
c("GO:0051641","cellular localization",3.7434567372987795,-3.6749572102083348,-4.226902441962817,6.051327363159859,-3.2317631196958057,0.8230756916290243,0.01005372),
c("GO:0071702","organic substance transport",6.066900404037823,-3.295071922216144,-4.591237512465042,6.261021262477039,-1.9527195508730977,0.8189012979458192,0.61057863),
c("GO:0071705","nitrogen compound transport",4.774462994776034,-3.951909392677372,-4.533858216318725,6.156978993052161,-2.579469485343148,0.8246139645824633,0.42913564),
c("GO:1901565","organonitrogen compound catabolic process",2.522113114624977,6.7212435316717745,2.194936282978081,5.879819292035843,-3.586162729318497,0.7209063224588478,0.04293848),
c("GO:1901566","organonitrogen compound biosynthetic process",14.63667861962968,7.339741689112482,1.004279142007998,6.643496794616454,-1.3603224894291073,0.7947872345356883,0.30097905));
one.data <- data.frame(revigo.data);
View(one.data)
names(one.data) <- revigo.names;
one.data <- one.data [(one.data$plot_X != "null" & one.data$plot_Y != "null"), ];
one.data$plot_X     <- as.numeric( as.character(one.data$plot_X) );
one.data$plot_Y     <- as.numeric( as.character(one.data$plot_Y) );
one.data$log_size   <- as.numeric( as.character(one.data$log_size) );
one.data$value      <- as.numeric( as.character(one.data$value) );
one.data$frequency  <- as.numeric( as.character(one.data$frequency) );
one.data$uniqueness <- as.numeric( as.character(one.data$uniqueness) );
one.data$dispensability <- as.numeric( as.character(one.data$dispensability) );
#head(one.data);
summary(one.data)
# --------------------------------------------------------------------------
# Names of the axes, sizes of the numbers and letters, names of the columns,
# etc. can be changed below
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);
print(p1)
one.data <- one.data [(one.data$plot_X != "null" & one.data$plot_Y != "null"), ];
one.data$plot_X     <- as.numeric( as.character(one.data$plot_X) );
one.data$plot_Y     <- as.numeric( as.character(one.data$plot_Y) );
one.data$log_size   <- as.numeric( as.character(one.data$log_size) );
one.data$value      <- as.numeric( as.character(one.data$value) );
one.data$frequency  <- as.numeric( as.character(one.data$frequency) );
one.data$uniqueness <- as.numeric( as.character(one.data$uniqueness) );
one.data$dispensability <- as.numeric( as.character(one.data$dispensability) );
#head(one.data);
summary(one.data)
revigo.names <- c("term_ID","description","frequency","plot_X","plot_Y","log_size","value","uniqueness","dispensability");
revigo.data <- rbind(c("GO:0000902","cell morphogenesis",0.2547222452837418,-6.4625022521547875,-1.020481743091991,4.884126704106494,-1.3850101245890665,1,-0),
c("GO:0005975","carbohydrate metabolic process",5.521546466478484,0.6252574475325016,-8.401293403063226,6.220115151808519,-4.08878238840169,0.918569697840237,0.06605965),
c("GO:0005976","polysaccharide metabolic process",1.1167319130275588,1.9399140785366105,2.573391536856036,5.526004379634945,-2.306541114801787,0.800110318494167,0.50062828),
c("GO:0005977","glycogen metabolic process",0.15998929235904444,2.07839254953769,4.37050503744209,4.682154105271285,-2.306541114801787,0.7579813642485328,0),
c("GO:0006014","D-ribose metabolic process",0.0324735023139574,3.3531826219140584,-1.1697710419256757,3.989627770745151,-1.3850101245890665,0.7807741575766552,0.64951062),
c("GO:0006082","organic acid metabolic process",8.895121929802153,4.814786780033746,-4.14438321499197,6.427206226819538,-3.328244029122345,0.7499568367054361,0.65731846),
c("GO:0006090","pyruvate metabolic process",0.8124529012810852,5.6632329396451855,-4.174443344152099,5.38785413076023,-1.661841326766608,0.7677181208834107,0.47439649),
c("GO:0006091","generation of precursor metabolites and energy",2.62835465282124,2.406080840714739,-8.281356391265337,5.897738674144431,-2.5935398453017737,0.9179566570579504,0.07142694),
c("GO:0006112","energy reserve metabolic process",0.16146279041549053,1.6381006653973433,6.644223664298112,4.686135559106637,-2.306541114801787,0.897669932420661,0.65905198),
c("GO:0006418","tRNA aminoacylation for protein translation",0.974318159563009,5.848674061993203,-1.4671595297532343,5.466756438594257,-2.0139163947229966,0.6088770072299181,0.20285709),
c("GO:0006457","protein folding",1.0590625918025878,-5.755472363647276,2.2940842090182505,5.502977151016975,-2.1556141416414265,0.9883318470890157,0.0124796),
c("GO:0006499","N-terminal protein myristoylation",0.011402147488706951,6.470306488758469,4.154299216579224,3.535167485114944,-1.3850101245890665,0.8289044817281538,0.23929075),
c("GO:0006508","proteolysis",5.350747086797883,7.256651803461404,1.6003462155293744,6.206468852551757,-2.5780712626124123,0.7881846156974271,0.36107106),
c("GO:0006810","transport",18.43241959157694,-3.5016127223249454,-4.901207417526029,6.743636585284185,-2.260426129459183,0.787989821355244,0.57967313),
c("GO:0008150","biological_process",100,-6.251128237738861,0.6094158002934453,7.47805417331953,-1.8982656367266175,1,-0),
c("GO:0009056","catabolic process",6.059177012419161,-2.851720758549677,2.4564119741408876,6.260468037413432,-3.6074578418667267,0.9501744636141854,0.04545057),
c("GO:0009066","aspartate family amino acid metabolic process",0.8335242561063357,6.2109232125710285,-2.408846586926003,5.398974134528076,-1.6433404733261572,0.7204556324697484,0.58351407),
c("GO:0009132","nucleoside diphosphate metabolic process",0.09319293125396481,5.283123571547984,-4.968130074941371,4.4474526312269935,-1.5848044322469477,0.8014152337494348,0.27579428),
c("GO:0009179","purine ribonucleoside diphosphate metabolic process",0.04863208822414945,4.799774771720758,-5.074299029703406,4.165006779568368,-1.7455822263732377,0.778310819857512,0.43566137),
c("GO:0009408","response to heat",0.1676661174477071,-3.1953835054817676,5.2158589159896716,4.702508082108066,-2.306541114801787,0.9738011045060151,-0),
c("GO:0009628","response to abiotic stimulus",0.5491291526700982,-2.6927148319492926,5.391932287316165,5.217731290014814,-1.3959106504715273,0.9864564161172993,0.28243337),
c("GO:0015980","energy derivation by oxidation of organic compounds",1.3592204656440126,1.9266502373416075,6.580049642794407,5.611345126683129,-1.6433404733261572,0.884150817911988,0.66061361),
c("GO:0016051","carbohydrate biosynthetic process",0.9607174066221332,2.473267084521993,2.470282417318745,5.46065132195499,-1.3959106504715273,0.7924181593826407,0.59881341),
c("GO:0016052","carbohydrate catabolic process",1.3222932073535736,3.128948023111835,3.0651464466306275,5.599383018287246,-1.7447647583152208,0.6946602820367422,0.67630193),
c("GO:0017038","protein import",0.050498075604885916,-2.6794727740004998,-5.9999980411497065,4.1813575920284505,-1.3859094805696361,0.7891200831109375,0.5507225),
c("GO:0019321","pentose metabolic process",0.18164605499001615,3.6386099957234963,-1.4821054908162048,4.737288081554018,-1.3850101245890665,0.7518610816429552,0.50651006),
c("GO:0019752","carboxylic acid metabolic process",8.61761202044457,5.162911717750121,-3.9996006328410454,6.413441264016772,-3.4338451925850126,0.7101704086307687,0.62971678),
c("GO:0022613","ribonucleoprotein complex biogenesis",1.8755867382780071,-4.906229302277843,3.8520658236759653,5.751192082363944,-1.6074583890902692,0.9709828319180763,0.01346186),
c("GO:0030163","protein catabolic process",1.1278347042519765,6.348592642358428,2.4947997057986853,5.5303008936809706,-3.082001884716955,0.6889667503536202,0.66312635),
c("GO:0033036","macromolecule localization",3.705455122637613,-3.932813246171816,-4.968986638239165,6.04689610654029,-2.24415601619502,0.8317086489970293,0.41260575),
c("GO:0034504","protein localization to nucleus",0.12382372945218602,-2.663890566684369,-5.642185262518053,4.5708697052408205,-1.5135936903045801,0.764019488073323,0.59738009),
c("GO:0043038","amino acid activation",0.9991846865833046,5.974698554065571,-2.368022016458555,5.47770137405037,-2.0139163947229966,0.7156942791754743,0.59496536),
c("GO:0044281","small molecule metabolic process",15.15473791824727,-1.0626616010118646,6.6673401110895085,6.658602684396198,-1.8154342512894506,0.943103134387422,0.06282687),
c("GO:0046034","ATP metabolic process",0.4379083219444906,5.901758610336621,-3.0698280543639984,5.11944065613114,-1.5135936903045801,0.7504167585003647,0.51281918),
c("GO:0046907","intracellular transport",2.0388822542670906,-3.100905883196661,-5.3954336251977075,5.787447013306281,-3.2232883973298754,0.7032264579098704,0.37826542),
c("GO:0051179","localization",18.792076186036212,-3.884084661382564,0.5201632820858231,6.75202900021518,-2.217508631387501,1,-0),
c("GO:0051641","cellular localization",3.7434567372987795,-3.6749572102083348,-4.226902441962817,6.051327363159859,-3.2317631196958057,0.8230756916290243,0.01005372),
c("GO:0071702","organic substance transport",6.066900404037823,-3.295071922216144,-4.591237512465042,6.261021262477039,-1.9527195508730977,0.8189012979458192,0.61057863),
c("GO:0071705","nitrogen compound transport",4.774462994776034,-3.951909392677372,-4.533858216318725,6.156978993052161,-2.579469485343148,0.8246139645824633,0.42913564),
c("GO:1901565","organonitrogen compound catabolic process",2.522113114624977,6.7212435316717745,2.194936282978081,5.879819292035843,-3.586162729318497,0.7209063224588478,0.04293848),
c("GO:1901566","organonitrogen compound biosynthetic process",14.63667861962968,7.339741689112482,1.004279142007998,6.643496794616454,-1.3603224894291073,0.7947872345356883,0.30097905));
one.data <- data.frame(revigo.data);
View(one.data)
names(one.data) <- revigo.names;
one.data <- one.data [(one.data$plot_X != "null" & one.data$plot_Y != "null"), ];
one.data$plot_X     <- as.numeric( as.character(one.data$plot_X) );
one.data$plot_Y     <- as.numeric( as.character(one.data$plot_Y) );
one.data$log_size   <- as.numeric( as.character(one.data$log_size) );
one.data$value      <- as.numeric( as.character(one.data$value) );
one.data$frequency  <- as.numeric( as.character(one.data$frequency) );
one.data$uniqueness <- as.numeric( as.character(one.data$uniqueness) );
one.data$dispensability <- as.numeric( as.character(one.data$dispensability) );
#head(one.data);
summary(one.data)
# --------------------------------------------------------------------------
# Names of the axes, sizes of the numbers and letters, names of the columns,
# etc. can be changed below
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
ex <- one.data [ one.data$dispensability < 0.15, ];
p1 <- p1 + geom_text( data = ex,
aes(plot_X, plot_Y, label = description),
colour = I(alpha("black", 0.85)),
size = 3 )+
labs (y = "semantic space x", x = "semantic space y")+
theme(legend.key = element_blank())+
ggtitle("valores de dispensabilidad <0.15");
print(p1)
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);
print(p1)
one.data$plot_X
one.data$plot_Y
px <- one.data$plot_X
py <- one.data$plot_Y
plot(px,py)
matrizp <- as.data.frame(cbind(px,py))
matrizp
View(matrizp)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )
p1
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
p1
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 2),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
p1
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 2),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
p1
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 2),
shape = 3, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 30)) + theme_bw()
p1
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 150)) + theme_bw()
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = log_size),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 15)) + theme_bw()
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = 1),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = log_size),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 15)) + theme_bw()
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = 1),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 1),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 15)) + theme_bw()
print(p1)
ex <- one.data [ one.data$dispensability < 0.15, ];
p1 <- p1 + geom_text( data = ex,
aes(plot_X, plot_Y, label = description),
colour = I(alpha("black", 0.85)),
size = 3 )+
labs (y = "semantic space x", x = "semantic space y")+
theme(legend.key = element_blank())+
ggtitle("valores de dispensabilidad <0.15");
print(p1)
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = 1),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 1),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 15)) + theme_bw()
print(p1)
ex <- one.data [ one.data$dispensability < 0.15, ];
p1 <- p1 + geom_text( data = ex,
aes(plot_X, plot_Y, label = description),
colour = I(alpha("black", 0.85)),
size = 3, angle = 30 )+
labs (y = "semantic space x", x = "semantic space y")+
theme(legend.key = element_blank())+
ggtitle("valores de dispensabilidad <0.15");
print(p1)
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);
print(p1)
p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes(plot_X, plot_Y,
colour = value,
size = 1),
alpha = I(0.6) )+
scale_colour_gradientn(colours = c("blue", "green", "yellow", "red"),
limits = c( min(one.data$value), 0))+
geom_point( aes(plot_X, plot_Y, size = 1),
shape = 21, fill = "transparent",
colour = I (alpha ("black", 0.6) ))+
scale_size( range=c(5, 15)) + theme_bw()
print(p1)
ex <- one.data [ one.data$dispensability < 0.15, ];
p1 <- p1 + geom_text( data = ex,
aes(plot_X, plot_Y, label = description),
colour = I(alpha("black", 0.85)),
size = 4.5)+
labs (y = "semantic space x", x = "semantic space y")+
theme(legend.key = element_blank())+
ggtitle("valores de dispensabilidad <0.15");
print(p1)
library(DESeq2)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("multtest")
# - - - - - - - - - -  - - - - - - - - - - - -  - - - - - - - - - - - -  - - - - - - - - -
BiocManager::install("Rsubread")
BiocManager::install("qvalue")
BiocManager::install("tximport")
BiocManager::install("LeukemiasEset")
BiocManager::install("DESeq2")
BiocManager::install("airway")
BiocManager::install("ggplot2")
BiocManager::install("EnhancedVolcano")
BiocManager::install("dplyr")
BiocManager::install("org.Hs.eg.db")
BiocManager::install("AnnotationDbi")
BiocManager::install("genefilter")
install.packages("pheatmap")
install.packages("PoiClaClu")
library(DESeq2)
quit()
setwd("~/Documentos/MiGitHub/MapaCalorReloaded")
setwd("~/Documentos/MiGitHub/MapaCalorReloaded")
NewGenes <- read_csv("Ei_enq_circ.csv")
View(NewGenes)
library(readr)
NewGenes <- read_csv("Ei_enq_circ.csv")
View(NewGenes)
NewGenes$Trophs <- NewGenes$Trophs-2
NewGenes$`cyst 8h` <- NewGenes$`cyst 8h`-2;
NewGenes$`cyst 24h` <- NewGenes$`cyst 24h`-2
NewGenes$`cyst 48h` <- NewGenes$`cyst 48h`-2
NewGenes$`cyst 72h` <- NewGenes$`cyst 72h`-2
NewGenes$`excyst 2h` <- NewGenes$`excyst 2h`-2
NewGenes$`excyst 8h` <- NewGenes$`excyst 8h`-2
colnames(NewGenes) <- c("GeneID","Trophozoites", "Cyst_8h","Cyst_24h",
"Cyst_48h","Cyst_72h","Excyst_2h","Excyst_8h")
rownames(NewGenes) <- NewGenes$GeneID
GenesClean <- NewGenes[,2:8]; View(GenesClean)
rownames(GenesClean) <- rownames(NewGenes)
GenesClean <- as.data.frame(GenesClean)
rownames(GenesClean) <- NewGenes$GeneID
pdf("BoxplotDatosLimpios.pdf")
boxplot(EiMybs_clean, las = 2)
dev.off()
boxplot(GenesClean, las = 2)
dev.off()
boxplot(GenesClean, las = 2)
pdf("BoxplotDatosLimpios.pdf")
boxplot(GenesClean, las = 2)
dev.off()
EiMybs_log2 = log2(GenesClean + 1)
pdf("BoxPlotDatosTransformadosLog2.pdf")
boxplot(EiMybs_log2, las = 3)
dev.off()
GenesOrdered <- GenesClean[order(-GenesClean$Trophozoites),]
print(GenesOrdered)
top_GenesClean_Trop <- GenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
library(dplyr)
top_GenesClean_Trop <- GenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
k <- dim(GenesClean)
k
proporcion <- 1
NS <- round(k[1]*proporcion)
top_GenesClean_Trop <- GenesOrdered %>% filter(Trophozoites>0) %>% select(Trophozoites)
k <- dim(GenesClean)
proporcion <- 1
NS <- round(k[1]*proporcion)
random_GenesClean = sample(rownames(GenesClean),NS )
head(random_GenesClean)
pdf("HeatMapDatosLimpios.pdf")
pheatmap(GenesClean[random_GenesClean, ])
dev.off()
library(pheatmap)
if (!requireNamespace("pheatmap"))install.packages("pheatmap");          library(pheatmap)
library(pheatmap)
pdf("HeatMapDatosLimpios.pdf")
pheatmap(GenesClean[random_GenesClean, ])
dev.off()
sampledNewGenes_Log2 <- EiMybs_log2[random_GenesClean, ];
View(sampledNewGenes_Log2)
pdf("HeatMapLog2Transformed.pdf")
pheatmap(SampledNewGenes_log2[random_GenesClean, ])
dev.off()
sampledNewGenes_Log2
pdf("HeatMapLog2Transformed.pdf")
pheatmap(sampledNewGenes_Log2[random_GenesClean, ])
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
if (!requireNamespace("magrittr"))install.packages("magritt");           library(magrittr)
if (!requireNamespace("pheatmap"))install.packages("pheatmap");          library(pheatmap)
if (!requireNamespace("RColorBrewer"))install.packages("RcolorBrewer");  library(RColorBrewer)
if (!requireNamespace("Rio"))install.packages("rio");                    library(rio)
if (!requireNamespace("readr"))install.packages("readr");                library(readr)
if (!requireNamespace("tidyverse"))install.packages("");                 library(tidyverse)
if (!requireNamespace("mclust"))install.packages("mclust");              library(mclust)
if (!requireNamespace("venn"))install.packages("venn");                  library(venn)
if (!requireNamespace("dplyr"))install.packages("dplyr");                library(dplyr)
if (!requireNamespace("ggplot2"))install.packages("ggplot2");            library(ggplot2)
if (!requireNamespace("cowplot"))install.packages("cowplot");            library(cowplot)
if (!requireNamespace("RColorBrewer"))install.packages("RColorBrewer");  library(RColorBrewer)
if (!requireNamespace("ggVennDiagram"))install.packages("ggVennDiagram");library(ggVennDiagram)
if (!requireNamespace("VennDiagram"))install.packages("VennDiagram");    library(VennDiagram)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
setwd("~/Desktop/MiGithub/MapaCalorReloaded") # computadora de la casa
setwd("~/Documentos/MiGitHub/MapaCalorReloaded") # computadora del trabajo
library(readr)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes <- read_csv("Ei_enq_circ.csv")
View(NewGenes)
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes$Trophs <- NewGenes$Trophs-2
NewGenes$`cyst 8h` <- NewGenes$`cyst 8h`-2;
NewGenes$`cyst 24h` <- NewGenes$`cyst 24h`-2
NewGenes$`cyst 48h` <- NewGenes$`cyst 48h`-2
NewGenes$`cyst 72h` <- NewGenes$`cyst 72h`-2
NewGenes$`excyst 2h` <- NewGenes$`excyst 2h`-2
NewGenes$`excyst 8h` <- NewGenes$`excyst 8h`-2
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
colnames(NewGenes) <- c("GeneID","Trophozoites", "Cyst_8h","Cyst_24h",
"Cyst_48h","Cyst_72h","Excyst_2h","Excyst_8h")
rownames(NewGenes) <- NewGenes$GeneID
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
Genes_Clean <- NewGenes[,2:8]; View(Genes_Clean)
rownames(Genes_Clean) <- rownames(NewGenes)
Genes_Clean <- as.data.frame(Genes_Clean)
rownames(Genes_Clean) <- NewGenes$GeneID
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
pdf("BoxplotDatosLimpios.pdf")
boxplot(Genes_Clean, las = 2)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
NewGenes_log2 = log2(Genes_Clean + 1)
pdf("BoxPlotDatosTransformadosLog2.pdf")
boxplot(NewGenes_log2, las = 3)
dev.off()
#<< == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >> << == >>
if (!requireNamespace("magrittr"))install.packages("magritt");           library(magrittr)
if (!requireNamespace("pheatmap"))install.packages("pheatmap");          library(pheatmap)
if (!requireNamespace("RColorBrewer"))install.packages("RcolorBrewer");  library(RColorBrewer)
if (!requireNamespace("Rio"))install.packages("rio");                    library(rio)
if (!requireNamespace("readr"))install.packages("readr");                library(readr)
if (!requireNamespace("tidyverse"))install.packages("");                 library(tidyverse)
if (!requireNamespace("mclust"))install.packages("mclust");              library(mclust)
if (!requireNamespace("venn"))install.packages("venn");                  library(venn)
if (!requireNamespace("dplyr"))install.packages("dplyr");                library(dplyr)
if (!requireNamespace("ggplot2"))install.packages("ggplot2");            library(ggplot2)
if (!requireNamespace("cowplot"))install.packages("cowplot");            library(cowplot)
if (!requireNamespace("RColorBrewer"))install.packages("RColorBrewer");  library(RColorBrewer)
if (!requireNamespace("ggVennDiagram"))install.packages("ggVennDiagram");library(ggVennDiagram)
