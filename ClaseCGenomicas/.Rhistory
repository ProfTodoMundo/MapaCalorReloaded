theme(legend.position="right")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="GnBu") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(palette = "GnBu") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#                 fill = "green",
#                 color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(palette = "GnBu") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(palette = "GnBu") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = GnBu,
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "GnBu",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "GnBu",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
library(RColorBrewer)
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "GnBu",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#fill = "green",
color = "red",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="GnBu")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.85,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="Dark2")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "green",
color = "gray",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "white",
color = "gray",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "yellow",
color = "gray",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.95,
fill = "yellow",
color = "gray",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.95,
fill = "yellow",
color = "green",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
#----Instalacion y carga de librerias a utilizar ----
# Instala y carga la librería readxl si aún no lo has hecho
# install.packages("readxl")
library(readxl)
#---- Definicion del directorio de trabajo ----
setwd("~/Documents/GitHub/MapaCalorReloaded/ClaseCGenomicas")
#setwd("~/Desktop/MiGithub/MapaCalorReloaded/ClaseCGenomicas")
##---- Limpieza del ambiente de RStudio ----
rm(list = ls())
##----  Especifica la ruta de tu archivo Excel----
ruta_archivo <- "Histograma.xlsx"
##---- Lectura de las hojas de excel incluidas en el archivo----
dataset1 <- read_excel(ruta_archivo, sheet = 1)
head(dataset1,5)
dataset2 <- read_excel(ruta_archivo, sheet = 2)
head(dataset2,5)
#---- Procesamiento de datos ----
##---- Determinemos la dimension de cada archivo ----
u1 <- dim(dataset1); print(u1)
u2 <- dim(dataset2); print(u2)
##---- Obtenemos solo las columnas no vacias ----
indices1 <- c(1,3,6); dataset1 <- dataset1[,indices1]; print(dataset1)
indices2 <- c(1,3,4); dataset2 <- dataset2[,indices2]; print(dataset2)
##---- Redifinicion de los nombres de las columnas ----
colnames(dataset1) <- c('GeneId','PDescription','TPM_Basal'); print(dataset1)
colnames(dataset2) <- c('GeneId','PDescription','TPM_Basal'); print(dataset2)
##---- Redifinicion de los nombres de los renglones ----
###---- Primero el dataset1 ----
dataset1 <- dataset1[!duplicated(dataset1), ]; View(dataset1)
rownames(dataset1) <- dataset1$GeneId; View(dataset1)
###---- Ahora el dataset2 ----
dataset2 <- dataset2[!duplicated(dataset2), ]; View(dataset2)
rownames(dataset2) <- dataset2$GeneId; View(dataset2)
#----Grafica de datos ----
## recordemos como se ven los datasets
View(dataset1);View(dataset2);
summary(dataset1); summary(dataset2)
##---- Cargemos las librerias para graficar ----
#install.packages('ggplot2')
##---- Graficando con la libreria precargada ----
nbreaks <- 10
tBE <- hist(dataset1$TPM_Basal, breaks = nbreaks, col= rainbow(1,0.7), main = 'BasalExpresion')
BE <- dataset1$TPM_Basal
Log2BE <- log2(BE)
nBE    <- length(Log2BE)
hist(Log2BE, breaks = nbreaks, col= rainbow(25,0.3),
main = ' Log2 Basal Expresion')
dataset1$Log2BE <- Log2BE
##---- Graficando con ggplot2 ----
###---- En caso de ser necesario instalamos las librerias que se requieren ----
if (!requireNamespace("ggplot2", quietly = TRUE)) {install.packages("ggplot2")}
if (!requireNamespace("RColorBrewer", quietly = TRUE)) {install.packages("RColorBrewer")}
library(ggplot2)
library(RColorBrewer)
###---- Template 1, dodge, jitter, identity, stack ----
numbins = 60;
anchobins = 0.35;
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "dodge") +
theme_classic()+
theme(legend.position="left")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
###---- Template 2, jitter + position legend:none, top, bottom, left, right, topright, ----
# topleft, bottomtright, bottomleft
ggplot(dataset1, aes(x = dataset1$Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "red",
position = "jitter") +
theme_classic()+
theme(legend.position="right")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
###---- Template 3, dodge + uso de la paleta de colores (no corre) ----
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
#fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="GnBu")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
# - - - - - - - -  - - - - - - - -  - - - - - - - -  - - - - - - - -  - - - - - - - -  - - - - - - - -
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
scale_fill_brewer(7,palette="YlOrRd")+
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
###---- Template 4, cambio de tonalidadades ----
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.25,
fill = "green",
color = "gray",
position = "dodge") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
###---- Template 5, tipo de lineas ----
ggplot(dataset1, aes(x = Log2BE)) +
geom_histogram(bins=numbins,
binwidth = anchobins,
alpha = 0.95,
fill = "yellow",
color = "green",
position = "dodge",
linetype = "dashed") +
theme_classic() +
theme(legend.position="bottomright") +
labs(title = "TPM Basal Expresion",
x = "Valores",
y = "Frecuencia")
rm(list = ls())
cat("\014")
setwd("~/Documents/GitHub/MapaCalorReloaded/ClaseCGenomicas")
library(RColorBrewer)
library(readr)
library(pheatmap)
library(dplyr)
ruta_archivo <- "MapaCalor.xlsx"
dataset1 <- read_excel(ruta_archivo, sheet = 1)
dataset1
head(dataset1,5)
dataset2 <- read_excel(ruta_archivo, sheet = 2)
head(dataset2,5)
u1 <- dim(dataset1); print(u1)
u2 <- dim(dataset2); print(u2)
head(dataset1,5); View(dataset1)
head(dataset2,5); View(dataset2)
colnames(dataset1)
colnames(dataset1) <- c('GeneId','Descripcion',
'Ctrl0hr','Ctrl1hr',
'Encyst1hr','Ctrl4hr',
'Encyst4hr','Ctrl8hr'
'Encyst8hr');
colnames(dataset1) <- c('GeneId','Descripcion',
'Ctrl0hr','Ctrl1hr',
'Encyst1hr','Ctrl4hr',
'Encyst4hr','Ctrl8hr',
'Encyst8hr');
print(dataset1)
colnames(dataset2)
colnames(dataset2) <- c('GeneId','Descripcion',
'Ctrl0hr','Encyst1hr',
'Encyst4hr','Encyst8hr');
print(dataset2); View(dataset2)
colnames(dataset1) <- c('GeneId','Descripcion',
'Ctrl0hr','Ctrl1hr',
'Encyst1hr','Ctrl4hr',
'Encyst4hr','Ctrl8hr',
'Encyst8hr');
print(dataset1); View(dataset1)
dataset1 <- dataset1[!duplicated(dataset1), ]; View(dataset1)
rownames(dataset1) <- dataset1$GeneId; View(dataset1)
dataset2 <- dataset2[!duplicated(dataset2), ]; View(dataset2)
rownames(dataset2) <- dataset2$GeneId; View(dataset2)
write.csv(dataset1,"Enquistamiento.csv")
NewGenes <- read_csv("Enquistamiento.csv")
View(NewGenes)
dataset2 <- dataset2[!duplicated(dataset2), ]; View(dataset2)
rownames(dataset2) <- dataset2$GeneId; View(dataset2)
write.csv(dataset2,"Enquistamientotoplot.csv")
NewGenes <- read_csv("Enquistamientotoplot.csv")
View(NewGenes)
NewGenes <- dataset1; View(NewGenes)
indices <- c(3,5,7,9)
NewGenes <- dataset1[,indices]; View(NewGenes)
rownames(NewGenes) <- dataset1$GeneId; View(NewGenes)
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenes_log2   <-  log2(NewGenes + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes$Ctrl0hr),]
NewGenesOrdered <- NewGenes[order(-NewGenes$Ctrl0hr),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Ctrl0hr>0) %>% select(Ctrl0hr)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NewGenes_Clean <- NewGenes
NewGenes_log2   <-  log2(NewGenes_Clean + 1)
NewGenesOrdered <- NewGenes_Clean[order(-NewGenes_Clean$Ctrl0hr),]
top_genes_NewGenes_Trop <- NewGenesOrdered %>% filter(Ctrl0hr>0) %>% select(Ctrl0hr)
k  <- dim(NewGenes_Clean); proporcion <- 1;
NS <- round(k[1]*proporcion);
random_genes_NewGenes  <- sample(rownames(NewGenes_Clean),NS );
sampledNewGenes_Log2   <- NewGenes_log2[random_genes_NewGenes, ];
NewGenes_log2_filtrado <- NewGenes_log2[rowSums(NewGenes_log2) != 0, ]; View(NewGenes_log2_filtrado)
my_colors = brewer.pal(n = 11, name = "RdBu")
my_colors = colorRampPalette(my_colors)(50)
my_colors = rev(my_colors)
my_colors2 = c("green", "yellow", "pink")
my_colors2 = colorRampPalette(my_colors2)(50)
my_colors3 = brewer.pal(n = 11, name = "RdBu")
my_colors3 = colorRampPalette(my_colors3)(50)
my_colors3 = rev(my_colors3)
my_colors4 = colorRampPalette(rev(brewer.pal(n = 7, name = "RdYlBu")))(100)
cell_width <- 60
mi_font_size <- 3.75
pheatmap(NewGenes_log2_filtrado, cluster_cols = FALSE,color = my_colors,scale = "row",
fontsize_row = mi_font_size, cellwidth = cell_width,main ="Amplio de celda 60 y letras de genes 3.25")
u1
